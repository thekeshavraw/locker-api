{
     "openapi": "3.0.1",
     "info": {
          "title": "Network Authentication API",
          "description": "This is a Simple Network Authentication API",
          "termsOfService": "http://swagger.io/terms/",
          "contact": {
               "email": "apiteam@swagger.io"
          },
          "license": {
               "name": "Apache 2.0",
               "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
          },
          "version": "1.0.0"
     },
     "externalDocs": {
          "description": "Find out more about Tryzent",
          "url": "https://tryzentt.com"
     },
     "servers": [
          {
               "url": "http://localhost:3000/auth/v1"
          },
          {
               "url": "http://network.tryzent.com/api/v1"
          }
     ],
     "tags": [
          {
               "name": "User",
               "description": "Everything about your User",
               "externalDocs": {
                    "description": "Find out more",
                    "url": "http://swagger.io"
               }
          },
          {
               "name": "Network",
               "description": "Access to Network API"
          }
     ],
     "paths": {
          "/user": {
               "get": {
                    "tags": [
                         "User"
                    ],
                    "summary": "Get All Users",
                    "description": "Get All Users Details",
                    "operationId": "findPetsByStatus",
                    "parameters": [
                         {
                              "name": "status",
                              "in": "query",
                              "description": "Status values that need to be considered for filter",
                              "required": true,
                              "style": "form",
                              "explode": true,
                              "schema": {
                                   "type": "array",
                                   "items": {
                                        "type": "string",
                                        "default": "available",
                                        "enum": [
                                             "available",
                                             "pending",
                                             "sold"
                                        ]
                                   }
                              }
                         }
                    ],
                    "responses": {
                         "200": {
                              "description": "Successful Operation",
                              "content": {
                                   "application/json": {
                                        "schema": {
                                             "type": "array",
                                             "items": {
                                                  "$ref": "#/components/schemas/Pet"
                                             }
                                        }
                                   }
                              }
                         },
                         "400": {
                              "description": "Invalid status value",
                              "content": {}
                         }
                    },
                    "security": [
                         {
                              "petstore_auth": [
                                   "write:pets",
                                   "read:pets"
                              ]
                         }
                    ]
               },
               "post": {
                    "tags": [
                         "User"
                    ],
                    "summary": "Add a new user",
                    "operationId": "",
                    "requestBody": {
                         "description": "Add new user to database",
                         "content": {
                              "application/json": {
                                   "schema": {
                                        "$ref": "#/components/schemas/Pet"
                                   }
                              }
                         },
                         "required": true
                    },
                    "responses": {
                         "405": {
                              "description": "Invalid input",
                              "content": {}
                         }
                    },
                    "security": [],
                    "x-codegen-request-body-name": "body"
               },
               "put": {
                    "tags": [
                         "User"
                    ],
                    "summary": "Update an existing user",
                    "operationId": "",
                    "requestBody": {
                         "description": "User User",
                         "content": {
                              "application/json": {
                                   "schema": {
                                        "$ref": "#/components/schemas/Pet"
                                   }
                              }
                         },
                         "required": true
                    },
                    "responses": {
                         "400": {
                              "description": "Invalid ID supplied",
                              "content": {}
                         },
                         "404": {
                              "description": "Pet not found",
                              "content": {}
                         },
                         "405": {
                              "description": "Validation exception",
                              "content": {}
                         }
                    },
                    "security": [],
                    "x-codegen-request-body-name": "body"
               }
          },
          "/user/login": {
               "post": {
                    "tags": [
                         "User"
                    ],
                    "summary": "Logs user into the system",
                    "operationId": "",
                    "parameters": [
                         {
                              "name": "username",
                              "in": "query",
                              "description": "The user name for login",
                              "required": true,
                              "schema": {
                                   "type": "string"
                              }
                         },
                         {
                              "name": "password",
                              "in": "query",
                              "description": "The password for login in clear text",
                              "required": true,
                              "schema": {
                                   "type": "string"
                              }
                         }
                    ],
                    "responses": {
                         "200": {
                              "description": "successful operation",
                              "headers": {
                                   "X-Rate-Limit": {
                                        "description": "calls per hour allowed by the user",
                                        "schema": {
                                             "type": "integer",
                                             "format": "int32"
                                        }
                                   },
                                   "X-Expires-After": {
                                        "description": "date in UTC when token expires",
                                        "schema": {
                                             "type": "string",
                                             "format": "date-time"
                                        }
                                   }
                              },
                              "content": {
                                   "application/json": {
                                        "schema": {
                                             "type": "string"
                                        }
                                   }
                              }
                         },
                         "400": {
                              "description": "Invalid username/password supplied",
                              "content": {}
                         }
                    }
               }
          },
          "/user/signup": {
               "post": {
                    "tags": [
                         "User"
                    ],
                    "summary": "Signup user into the system",
                    "operationId": "",
                    "requestBody": {
                         "description": "Signup Payload.",
                         "content": {
                              "application/json": {
                                   "schema": {
                                        "type": "object",
                                        "properties": {
                                             "source": {
                                                  "type": "string"
                                             },
                                             "phone" : {
                                                  "type": "object",
                                                  "properties" : {
                                                       "code": {
                                                            "type": "string"
                                                       },
                                                       "num": {
                                                            "type": "string"
                                                       }
                                                  }
                                             }
                                        }
                                   }
                              }
                         }
                    },
                    "responses": {
                         "200": {
                              "description": "successful operation",
                              "content": {
                                   "application/json": {
                                        "schema": {
                                             "type": "string"
                                        }
                                   }
                              }
                         },
                         "400": {
                              "description": "Invalid Data",
                              "content": {}
                         }
                    }
               }
          }
     },
     "components": {
          "schemas": {
               "User": {
                    "type": "object",
                    "properties": {
                         "id": {
                              "type": "integer",
                              "format": "int64"
                         },
                         "username": {
                              "type": "string"
                         },
                         "firstName": {
                              "type": "string"
                         },
                         "lastName": {
                              "type": "string"
                         },
                         "email": {
                              "type": "string"
                         },
                         "password": {
                              "type": "string"
                         },
                         "phone": {
                              "type": "string"
                         },
                         "userStatus": {
                              "type": "integer",
                              "description": "User Status",
                              "format": "int32"
                         }
                    },
                    "xml": {
                         "name": "User"
                    }
               },
               "ApiResponse": {
                    "type": "object",
                    "properties": {
                         "code": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "type": {
                              "type": "string"
                         },
                         "message": {
                              "type": "string"
                         }
                    }
               }
          },
          "securitySchemes": {
               "petstore_auth": {
                    "type": "oauth2",
                    "flows": {
                         "implicit": {
                              "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
                              "scopes": {
                                   "write:pets": "modify pets in your account",
                                   "read:pets": "read your pets"
                              }
                         }
                    }
               },
               "api_key": {
                    "type": "apiKey",
                    "name": "api_key",
                    "in": "header"
               }
          }
     }
}
